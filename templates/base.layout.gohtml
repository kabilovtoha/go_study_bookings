{{define "base"}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.3/dist/css/datepicker.min.css">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link href="/static/css/styles.css" rel="stylesheet">

    <style>
        .my-footer {
            height: 6em;
            padding: 1em;
            background-color: #212529;
            color: #FFFFFF;
            margin-top: 3em;
            font-size: 80%;
        }
    </style>
    {{block "css" .}}{{end}}
</head>
<body>

    <nav class="navbar navbar-expand-lg bg-dark border-bottom border-bottom-dark" data-bs-theme="dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Navbar</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Rooms
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/rooms/generals-quarters">General's Quarters</a></li>
                            <li><a class="dropdown-item" href="/rooms/majors-suite">Major's Quarters</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/search-availability">Book Now</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contacts">Contact</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    {{ block "content" . }}
    {{ end  }}
    <input id="base_inp_csrf_token" type="hidden" name="csrf_token" value="{{.CSRFToken}}">
    <div class="row my-footer">
        <div class="col">Left</div>
        <div class="col">Middle</div>
        <div class="col">Right</div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.3/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        let attention = Prompt();

        function notify(msg, msgType) {
            notie.alert({
                type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                text: msg,
            })
        }
        function notifyModal(title, text, html, icon, confirmationButton) {
            Swal.fire({
                title: title,
                text: text,
                icon: icon, // 'error', 'success', 'question', 'warning', 'info',
            })
        }

        function Prompt() {
            function toast(c) {
                const {
                    msg = "",
                    icon = "success",
                    position = 'top-end',
                    showConfirmButton = false,
                    timer = 3000,
                    timerProgressBar = true,
                } = c;
                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    icon: icon,
                    position: position,
                    showConfirmButton: showConfirmButton,
                    timer: timer,
                    timerProgressBar: timerProgressBar,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: 'Signed in successfully'
                })
            }
            function success(c) {
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c;
                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer,
                })
            }
            function error(c) {
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c;
                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer,
                })
            }
            async function custom (c) {
                const {
                    msg = "",
                    title = "",
                } = c;
                const { value: result } = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    willOpen: () => {
                        if (c.willOpen !== undefined) {
                            c.willOpen();
                        }
                    },
                    preConfirm: () => {
                        if (c.preConfirm !== undefined) {
                            c.preConfirm()
                        }
                    },
                    didOpen: () => {
                        if (c.didOpen !== undefined) {
                            c.didOpen()
                        }
                    }
                })
                if (result) {
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                       if (result.value!=="") {
                            if (c.callback !== undefined) {
                                c.callback(result);
                            }
                       } else {
                           c.callback(false);
                       }
                    } else {
                        c.callback(false);
                    }
                    // Swal.fire(JSON.stringify(result))
                }
            }
            return {
                toast: toast,
                success: success,
                error: error,
                custom: custom,
            }
        }
    </script>

    {{block "js" .}}{{end}}

    <script>
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
</body>
</html>
{{end}}